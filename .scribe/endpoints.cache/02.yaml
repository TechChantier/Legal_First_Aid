## Autogenerated by Scribe. DO NOT MODIFY.

name: 'user suggestions'
description: |-

  Endpoints related to user situations management.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/situations
    metadata:
      groupName: 'user suggestions'
      groupDescription: |-

        Endpoints related to user situations management.
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":2,"title":"Gate man was arrest","description":"He''s am going through a lot","image":"\/storage\/images\/sHNcE5cszEFpEYu770KvndsYVtYqSV8biQDgvB0Y.png","is_sensitive":0,"created_at":"2025-01-21T11:09:12.000000Z"},{"id":3,"title":"Hello mimi lena","description":"Call me when you can","image":"\/storage\/images\/YC2W1ITiioam6AfvVp0JScuZBXsunRJnLzeQTp4X.png","is_sensitive":0,"created_at":"2025-01-21T11:25:36.000000Z"},{"id":4,"title":"Does not go to school","description":"yes i don''t","image":null,"is_sensitive":0,"created_at":"2025-01-21T11:26:29.000000Z"},{"id":5,"title":"Had an arguement with the police","description":"yes i dis","image":null,"is_sensitive":0,"created_at":"2025-01-24T13:31:21.000000Z"},{"id":6,"title":"Had an arguement with the police","description":"yes i dis","image":null,"is_sensitive":0,"created_at":"2025-01-30T14:28:52.000000Z"},{"id":8,"title":"Had an arguement","description":"yes","image":"\/storage\/images\/DKz9SKbi1Y80AjWWqkCJkTp9MtEGczwaNgdCiiEh.png","is_sensitive":0,"created_at":"2025-01-30T14:39:42.000000Z"},{"id":9,"title":"Had an arguement","description":"yes","image":"\/storage\/images\/9BimUJSBcmMr1o0bctfYJ7fBK94WDbmCKajh936s.png","is_sensitive":1,"created_at":"2025-02-04T10:23:07.000000Z"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/situations
    metadata:
      groupName: 'user suggestions'
      groupDescription: |-

        Endpoints related to user situations management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Post user situation details.'
      description: 'Retrieve details of a user suggestions by their ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user suggestions.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 2000 characters.'
        required: true
        example: vbp
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: velit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must be a file. Must not be greater than 51200 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_sensitive:
        name: is_sensitive
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: vbp
      description: velit
      is_sensitive: false
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Situation created successfully",
          "data": {
             "id": 5,
             "title": "Had an arguement with the police",
             "description": "yes i dis",
             "image": null,
             "created_at": "2025-01-24T13:31:21.000000Z"
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/situations/{situationId}'
    metadata:
      groupName: 'user suggestions'
      groupDescription: |-

        Endpoints related to user situations management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user situation details.'
      description: 'Retrieve details of a situation suggestions by their ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      situationId:
        name: situationId
        description: ''
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the situation suggestions.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      situationId: 2
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "data": {
          "data": {
             "id": 5,
             "title": "Had an arguement with the police",
             "description": "yes i dis",
             "image": null,
             "created_at": "2025-01-24T13:31:21.000000Z"
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
          "success": false,
          "message": "Situation not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/situations/{situationId}'
    metadata:
      groupName: 'user suggestions'
      groupDescription: |-

        Endpoints related to user situations management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Put user situation details.'
      description: 'Retrieve details of a user situation by their ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      situationId:
        name: situationId
        description: ''
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the user situation.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      situationId: 2
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 2000 characters.'
        required: false
        example: nslxymlvtc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must be a file. Must not be greater than 51200 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_sensitive:
        name: is_sensitive
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: nslxymlvtc
      is_sensitive: false
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: |-
          {
          "message": "suggestion updated successfully",
          "data": {
             "id": 25,
             "answer": "You have to go to call your lawyer",
             "image": null,
             "created_at": "2025-01-24T09:22:02.000000Z",
             "lawyer": {
                 "id": 3,
                 "name": "Sandra",
                 "email": "sandra@gmail.com",
                 "image": "/storage/images/LPu4h7nOiKV7qvnlWsB1z0HJa4B7ofgHwymtAiHY.jpg",
                 "matricule": "bla bla bla"
             },
             "situation": {
                 "id": 2,
                 "title": "Gate man was arrest",
                 "description": "He's am going through a lot",
                 "image": "/storage/images/sHNcE5cszEFpEYu770KvndsYVtYqSV8biQDgvB0Y.png",
                 "created_at": "2025-01-21T11:09:12.000000Z"
             }
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
          "success": false,
          "message": "Suggestion not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/situations/{situationId}'
    metadata:
      groupName: 'user suggestions'
      groupDescription: |-

        Endpoints related to user situations management.
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      situationId:
        name: situationId
        description: ''
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      situationId: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
